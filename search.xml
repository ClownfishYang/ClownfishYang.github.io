<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/2020/11/10/Spark%E9%A1%B9%E7%9B%AEDemo/</url>
    <content><![CDATA[<p>　　最近正在中心整理之前学得一些知识，正好有空整理下Spark的大部分实现，项目会放到<a href="">SparkJobDemo</a>上。</p>
<h3 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a>项目构建</h3><p>　　项目使用的是Scala+Maven，基于<a href="https://github.com/martinprobson/Spark-Scala-Maven-Example">Spark-Scala-Maven-Example</a>，也可以换成<a href="https://github.com/faizanahemad/spark-gradle-template">SparkGradleTemplate</a>，重点不应该放在这个上面。<br>　　1. 项目初始化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;martinprobson&#x2F;Spark-Scala-Maven-Example.git</span><br><span class="line">mvn -U clean install</span><br></pre></td></tr></table></figure>
<pre><code>2. 单元测试
项目集成了很多常用的功能，例如上下文初始化trait(SparkEnv)、配置文件加载(typesafe)和日志文件(grizzled)，并且继承几个简单的单元测试(SparkTest)，能够很好的检测环境问题。</code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">test(&quot;empsRDD rowcount&quot;) &#123; spark &#x3D;&gt;</span><br><span class="line">  val empsRDD &#x3D; spark.sparkContext.parallelize(getInputData(&quot;&#x2F;data&#x2F;employees.json&quot;), 5)</span><br><span class="line">  assert(empsRDD.count &#x3D;&#x3D;&#x3D; 1000)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test(&quot;titlesRDD rowcount&quot;) &#123; spark &#x3D;&gt;</span><br><span class="line">  val titlesRDD &#x3D; spark.sparkContext.parallelize(getInputData(&quot;&#x2F;data&#x2F;titles.json&quot;), 5)</span><br><span class="line">  assert(titlesRDD.count &#x3D;&#x3D;&#x3D; 1470)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private def getInputData(name: String): Seq[String] &#x3D; &#123;</span><br><span class="line">  val is: InputStream &#x3D; getClass.getResourceAsStream(name)</span><br><span class="line">  scala.io.Source.fromInputStream(is).getLines.toSeq</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="常见业务处理"><a href="#常见业务处理" class="headerlink" title="常见业务处理"></a>常见业务处理</h3>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Spark</tag>
        <tag>大数据</tag>
        <tag>Demo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Next搭建博客问题</title>
    <url>/2020/11/03/Hexo%20Next%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>之前已经搭建过了一次，后面一直没有使用，最近又心学来潮想弄起来记录点东西。<br>搭建网上已经很多了，我就不啰嗦，主要记录下我遇到的问题以及做的一些修改，后续也会持续更新。</p>
<a id="more"></a>

<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="hexo-命令无法执行"><a href="#hexo-命令无法执行" class="headerlink" title="hexo 命令无法执行"></a>hexo 命令无法执行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo</span><br><span class="line"><span class="string">&#x27;hexo&#x27;</span> 不是内部或外部命令，也不是可运行的程序</span><br><span class="line">或批处理文件。</span><br></pre></td></tr></table></figure>
<p>好多博客都没有说明，问题是因为找不到<code>hexo-cli</code>的执行文件，需要将<code>node_modules</code>目录下的<code>.bin/hexo</code>加入到环境变量中，我没有加，直接使用<code>./node_modules/.bin/hexo</code>执行。</p>
<h3 id="分类页、标签页和关于页"><a href="#分类页、标签页和关于页" class="headerlink" title="分类页、标签页和关于页"></a>分类页、标签页和关于页</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new page categories</span><br><span class="line">$ hexo new page tags</span><br><span class="line">$ hexo new page about</span><br><span class="line"><span class="comment"># 分别对生成的categories、tags和about文件夹下的index.md文件添加type</span></span><br><span class="line"><span class="comment"># type: categories</span></span><br><span class="line"><span class="comment"># type: tags</span></span><br><span class="line"><span class="comment"># type: about</span></span><br><span class="line"><span class="comment"># 后面文章使用是只需要在head部添加categories和tags属性即可(yml语法)</span></span><br><span class="line">---</span><br><span class="line">title: 搭建博客</span><br><span class="line">tags:</span><br><span class="line">- Hexo</span><br><span class="line">- Cxo</span><br><span class="line">- blog</span><br><span class="line">categories:</span><br><span class="line">- 技术</span><br><span class="line">date: 2020-11-03 17:45:16</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h3 id="首页显示摘要（不显示全文）"><a href="#首页显示摘要（不显示全文）" class="headerlink" title="首页显示摘要（不显示全文）"></a>首页显示摘要（不显示全文）</h3><p>默认会显示全文，查看时很不方便，需要只显示摘要或者文章部分。<br>首先需要将<code>themes/_config.yml</code>中的<code>excerpt_description</code>属性启用，默认是true。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br></pre></td></tr></table></figure>
<p>方法有两种，一种是摘要，另一种是截取文章部分。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在文章头部添加description，内容就会被显示在首页上。</span><br><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">description: 这是显示在首页的概述，正文内容均会被隐藏。</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># 在文章中加&lt;!--more--&gt;标签，标签前的内容就会被显示在首页上。</span><br><span class="line">显示的内容</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">隐藏的内容</span><br></pre></td></tr></table></figure>


<h3 id="动画效果"><a href="#动画效果" class="headerlink" title="动画效果"></a>动画效果</h3><p>添加动画效果时需要安装额外的依赖，但是添加完以后会有依赖版本不兼容，所以我使用的CDN。<br>错误如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: TypeError: Cannot read property &#39;enable&#39; of undefined</span><br><span class="line">      at \themes\next\scripts\filters\comment\changyan.js:11:23</span><br><span class="line">      at Filter.execSync (\node_modules\hexo\lib\extend\filter.js:84:30)</span><br><span class="line">      at Hexo.execFilterSync (\node_modules\hexo\lib\hexo\index.js:485:31)</span><br><span class="line">      at module.exports (\themes\next\scripts\events\lib\injects.js:58:8)</span><br><span class="line">      at Hexo.&lt;anonymous&gt; (\themes\next\scripts\events\index.js:9:27)</span><br><span class="line">      at Hexo.emit (events.js:327:22)</span><br><span class="line">      at Hexo._generate (\node_modules\hexo\lib\hexo\index.js:452:10)</span><br><span class="line">      at \node_modules\hexo\lib\hexo\index.js:356:19</span><br><span class="line">      at tryCatcher (\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">      at Promise._settlePromiseFromHandler (\node_modules\bluebird\js\release\promise.js:517:31)</span><br><span class="line">      at Promise._settlePromise (\node_modules\bluebird\js\release\promise.js:574:18)</span><br><span class="line">      at Promise._settlePromise0 (\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">      at Promise._settlePromises (\node_modules\bluebird\js\release\promise.js:699:18)</span><br><span class="line">      at Promise._fulfill (\node_modules\bluebird\js\release\promise.js:643:18)</span><br><span class="line">      at Promise._resolveCallback (\node_modules\bluebird\js\release\promise.js:437:57)</span><br><span class="line">      at Promise._settlePromiseFromHandler (\node_modules\bluebird\js\release\promise.js:529:17)</span><br><span class="line">&#125; Something&#39;s wrong. Maybe you can find the solution here: %s https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.html</span><br></pre></td></tr></table></figure>
<p>动画启用配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 主题配置文件(themes&#x2F;_config.yml)</span><br><span class="line"># 页面加载动画(页面顶部的加载进度条)</span><br><span class="line">pace: true</span><br><span class="line"># Themes list:</span><br><span class="line"># pace-theme-big-counter | pace-theme-bounce | pace-theme-barber-shop | pace-theme-center-atom</span><br><span class="line"># pace-theme-center-circle | pace-theme-center-radar | pace-theme-center-simple | pace-theme-corner-indicator</span><br><span class="line"># pace-theme-fill-left | pace-theme-flash | pace-theme-loading-bar | pace-theme-mac-osx | pace-theme-minimal</span><br><span class="line">pace_theme: pace-theme-minimal</span><br><span class="line"></span><br><span class="line"># 顶部阅读进度条</span><br><span class="line">reading_progress:</span><br><span class="line">  enable: true</span><br><span class="line">  # Available values: top | bottom</span><br><span class="line">  position: top</span><br><span class="line">  color: &quot;#37c6c0&quot;</span><br><span class="line">  height: 2px</span><br><span class="line"></span><br><span class="line"># three 背景动画</span><br><span class="line"># three_waves</span><br><span class="line">three_waves: true</span><br><span class="line"># canvas_lines</span><br><span class="line">canvas_lines: true</span><br><span class="line"># canvas_sphere</span><br><span class="line">canvas_sphere: true</span><br><span class="line"></span><br><span class="line"># Canvas-nest 背景动画</span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: true</span><br><span class="line">  onmobile: true # display on mobile or not</span><br><span class="line">  color: &quot;0,0,255&quot; # RGB values, use &#39;,&#39; to separate</span><br><span class="line">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class="line">  zIndex: -1 # z-index property of the background</span><br><span class="line">  count: 99 # the number of lines</span><br><span class="line"></span><br><span class="line"># canvas-ribbon 背景动画</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: true</span><br><span class="line">  size: 300</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line"></span><br><span class="line"># 图片弹出效果</span><br><span class="line">fancybox: true</span><br></pre></td></tr></table></figure>

<p>方法一：安装依赖文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 进入主题目录</span><br><span class="line">$ cd themes&#x2F;next</span><br><span class="line"></span><br><span class="line"># 从GitHub下载依赖文件</span><br><span class="line"># 页面加载动画</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-pace source&#x2F;lib&#x2F;pace</span><br><span class="line"></span><br><span class="line"># 顶部阅读进度条</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-reading-progress source&#x2F;lib&#x2F;reading_progress</span><br><span class="line"></span><br><span class="line"># three 背景动画</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-three source&#x2F;lib&#x2F;three</span><br><span class="line"></span><br><span class="line"># canvas-nest 背景动画</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-canvas-nest source&#x2F;lib&#x2F;canvas-nest</span><br><span class="line"></span><br><span class="line"># canvas-ribbon 背景动画</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-canvas-ribbon source&#x2F;lib&#x2F;canvas-ribbon</span><br><span class="line"></span><br><span class="line"># 图片弹出效果</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-fancybox3 source&#x2F;lib&#x2F;fancybox</span><br></pre></td></tr></table></figure>

<p>方法二：使用CDN</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 从GitHub下载依赖文件</span><br><span class="line"># 页面加载动画(页面顶部的加载进度条)</span><br><span class="line">vendors:</span><br><span class="line">  # Internal version: 1.0.2</span><br><span class="line">  # pace: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pace-js@1&#x2F;pace.min.js</span><br><span class="line">  # pace: &#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;pace&#x2F;1.0.2&#x2F;pace.min.js</span><br><span class="line">  # pace_css: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pace-js@1&#x2F;themes&#x2F;blue&#x2F;pace-theme-minimal.css</span><br><span class="line">  # pace_css: &#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;pace&#x2F;1.0.2&#x2F;themes&#x2F;blue&#x2F;pace-theme-minimal.min.css</span><br><span class="line"></span><br><span class="line"># 顶部阅读进度条</span><br><span class="line">vendors:</span><br><span class="line">  # reading_progress: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;theme-next&#x2F;theme-next-reading-progress@1&#x2F;reading_progress.min.js</span><br><span class="line"></span><br><span class="line"># three 背景动画</span><br><span class="line">vendors:</span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # three: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;theme-next&#x2F;theme-next-three@1&#x2F;three.min.js</span><br><span class="line">  # three_waves: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;theme-next&#x2F;theme-next-three@1&#x2F;three-waves.min.js</span><br><span class="line">  # canvas_lines: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;theme-next&#x2F;theme-next-three@1&#x2F;canvas_lines.min.js</span><br><span class="line">  # canvas_sphere: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;theme-next&#x2F;theme-next-three@1&#x2F;canvas_sphere.min.js</span><br><span class="line"></span><br><span class="line"># canvas-nest 背景动画</span><br><span class="line">  # Canvas-nest:</span><br><span class="line">  canvas_nest: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;theme-next&#x2F;theme-next-canvas-nest@1&#x2F;canvas-nest.min.js</span><br><span class="line">  canvas_nest_nomobile: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;theme-next&#x2F;theme-next-canvas-nest@1&#x2F;canvas-nest-nomobile.min.js</span><br><span class="line"></span><br><span class="line"># canvas-ribbon 背景动画</span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # canvas_ribbon: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;theme-next&#x2F;theme-next-canvas-ribbon@1&#x2F;canvas-ribbon.js</span><br><span class="line"></span><br><span class="line"># 图片弹出效果</span><br><span class="line">  # FancyBox</span><br><span class="line">  # jquery: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line">  # fancybox: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;fancyapps&#x2F;fancybox@3&#x2F;dist&#x2F;jquery.fancybox.min.js</span><br><span class="line">  # fancybox_css: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;fancyapps&#x2F;fancybox@3&#x2F;dist&#x2F;jquery.fancybox.min.css</span><br></pre></td></tr></table></figure>

<h3 id="头像动画"><a href="#头像动画" class="headerlink" title="头像动画"></a>头像动画</h3><p>旧版本的动画效果需要修改CSS，新版本只需要配置就可以实现。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: img_url #&#x2F;images&#x2F;avatar.gif</span><br><span class="line">  # If true, the avatar will be dispalyed in circle.</span><br><span class="line">  rounded: true</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure>

<h3 id="Github角落"><a href="#Github角落" class="headerlink" title="Github角落"></a>Github角落</h3><p><a href="https://tholman.com/github-corners/">Github角落实现效果</a><br>旧版本的动画效果需要修改<code>themes/next/layout/_layout.swig</code>文件，新版本只需要配置就可以实现。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 旧版本，在&lt;div class&#x3D;&quot;headband&quot;&gt;&lt;&#x2F;div&gt;下添加github-corners提供的svg代码</span><br><span class="line">&lt;div class&#x3D;&quot;headband&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;a ...&gt;&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"># 新版本</span><br><span class="line"># &#96;Follow me on GitHub&#96; banner in the top-right corner.</span><br><span class="line">github_banner:</span><br><span class="line">  enable: false</span><br><span class="line">  permalink: https:&#x2F;&#x2F;github.com&#x2F;yourname</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>

<h3 id="标签图标"><a href="#标签图标" class="headerlink" title="标签图标"></a>标签图标</h3><p>默认标签使用#号，旧版本图片需要修改<code>/themes/next/layout/_macro/post.swig</code>文件，新版本只需要配置就可以实现。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 旧版本</span><br><span class="line"># &lt;a href&#x3D;&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel&#x3D;&quot;tag&quot;&gt;# &#123;&#123; tag.name &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel&#x3D;&quot;tag&quot;&gt;&lt;i class&#x3D;&quot;fa fa-tag&quot;&gt;&lt;&#x2F;i&gt; &#123;&#123; tag.name &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"># 新版本</span><br><span class="line"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span><br><span class="line">tag_icon: true</span><br></pre></td></tr></table></figure>
<h2 id="部署问题"><a href="#部署问题" class="headerlink" title="部署问题"></a>部署问题</h2><h3 id="hexo-deploy分支管理"><a href="#hexo-deploy分支管理" class="headerlink" title="hexo deploy分支管理"></a>hexo deploy分支管理</h3><p>我使用了<code>develop</code>和<code>master</code>两个分支,<code>develop</code>用于存储未发表的文章，<code>master</code>用于存储已发表的文章，但是使用<code>hexo deploy</code>命令部署的话，我的<code>master</code>分支将会被覆盖成静态文件，但如果不使用<code>hexo deploy</code>命令进行部署的话，就需要手动进行部署，并且我发现手动部署时文章中的更新时间不会被修改过来。<br>并且我还需要作为io的仓库，能够看到我现有维护的代码，能不能新增一个分支<code>pages</code>专门用来生成静态文件，作为io地址访问。<br>首先修改站点的配置文件<code>_config.yml</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git</span><br><span class="line">  branch: pages</span><br></pre></td></tr></table></figure>
<p>然后执行<code>hexo deploy</code>命令，成功之后会创建一个<code>pages</code>的分支；<br>然后到github仓库中的<code>setting</code>中找到<a href="https://docs.github.com/cn/free-pro-team@latest/github/working-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site">GitHub Pages</a>，将Source 的Branch 选为刚刚创建的<code>pages</code>，然后保存即可。 </p>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="https://zhuanlan.zhihu.com/p/26625249"><i class="fas fa-paperclip"></i> GitHub + Hexo</a><br><a href="https://github.com/Longlongyu/hexo-theme-Cxo"><i class="fas fa-paperclip"></i> Cxo Theme</a><br><a href="https://github.com/next-theme/hexo-theme-next"><i class="fas fa-paperclip"></i> Next Theme</a><br><a href="https://guanqr.com/tech/website/hexo-theme-next-customization/"><i class="fas fa-paperclip"></i> Hexo-NexT 主题个性优化</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Debezium常见问题</title>
    <url>/2020/11/05/Debezium%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>记录Debezium使用过程中遇到的一些常见问题，后续也会持续更新。</p>
<a id="more"></a>

<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="Mysql-binlog-文件清理"><a href="#Mysql-binlog-文件清理" class="headerlink" title="Mysql binlog 文件清理"></a>Mysql binlog 文件清理</h3><p>Debezium 同步Mysql依赖于binlog文件，<code>Debezium Mysql</code>会将binlog事件转换为Debezium更改事件并将这些事件记录到Kafka中，这就是<code>Debezium Mysql</code>的快照(snapshots)。<br>当connector 异常重启后，会执行<a href="https://debezium.io/documentation/reference/1.3/connectors/mysql.html#how-the-mysql-connector-performs-database-snapshots_debezium">快照恢复</a>：</p>
<ol>
<li>以可重复的读取语义启动事务，确保针对一致性快照中完成事务的所有后续读取操作；</li>
<li>读取当前serverName记录binlog的偏移量；</li>
<li>从偏移量位置开始读取允许的数据库和表的schema语句；</li>
<li>将DDL修改写入到schema修改的topic；</li>
<li>扫描数据表，并为每行数据创建相关联的topic；</li>
<li>提交事务，释放锁；</li>
<li>记录事务完成的偏移量到快照；</li>
</ol>
<p>当<code>Debezium Mysql Connector</code>停止时间过长导致binlog文件过期被清理或者磁盘紧张被清理时，Connector 记录的最后偏移量可能会丢失。<br>主要异常信息如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2020-11-04 10:29:21,539] INFO Kafka version: 2.4.1 (org.apache.kafka.common.utils.AppInfoParser:117)</span><br><span class="line">[2020-11-04 10:29:21,539] INFO Kafka commitId: c57222ae8cd7866b (org.apache.kafka.common.utils.AppInfoParser:118)</span><br><span class="line">[2020-11-04 10:29:21,539] INFO Kafka startTimeMs: 1604485761539 (org.apache.kafka.common.utils.AppInfoParser:119)</span><br><span class="line">[2020-11-04 10:29:21,540] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Subscribed to topic(s): dbhistory_topic (org.apache.kafka.clients.consumer.KafkaConsumer:969)</span><br><span class="line">[2020-11-04 10:29:21,546] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Cluster ID: erxHIDoJRXGAjZ0AujKkKA (org.apache.kafka.clients.Metadata:259)</span><br><span class="line">[2020-11-04 10:29:21,547] INFO Database history topic &#39;dbhistory_topic&#39; has correct settings (io.debezium.relational.history.KafkaDatabaseHistory:440)</span><br><span class="line">[2020-11-04 10:29:21,548] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Discovered group coordinator 172.26.77.29:9092 (id: 2147483646 rack: null) (org.apache.kafka.clients.consumer.internals.AbstractCoordinator:756)</span><br><span class="line">[2020-11-04 10:29:21,549] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] (Re-)joining group (org.apache.kafka.clients.consumer.internals.AbstractCoordinator:533)</span><br><span class="line">[2020-11-04 10:29:21,552] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] (Re-)joining group (org.apache.kafka.clients.consumer.internals.AbstractCoordinator:533)</span><br><span class="line">[2020-11-04 10:29:21,555] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Finished assignment for group at generation 1: &#123;dbhistory-b9169794-6a9c-4d16-abb2-70f291ffe28a&#x3D;Assignment(partitions&#x3D;[dbhistory_topic-0])&#125; (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator:585)</span><br><span class="line">[2020-11-04 10:29:21,556] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Successfully joined group with generation 1 (org.apache.kafka.clients.consumer.internals.AbstractCoordinator:484)</span><br><span class="line">[2020-11-04 10:29:21,557] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Adding newly assigned partitions: dbhistory_topic-0 (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator:267)</span><br><span class="line">[2020-11-04 10:29:21,558] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Found no committed offset for partition dbhistory_topic-0 (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator:1241)</span><br><span class="line">[2020-11-04 10:29:21,559] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Resetting offset for partition dbhistory_topic-0 to offset 0. (org.apache.kafka.clients.consumer.internals.SubscriptionState:381)</span><br><span class="line">[2020-11-04 10:29:22,105] INFO [Worker clientId&#x3D;connect-1, groupId&#x3D;realtime-cluster] Tasks [49_gb_soa_prd_mysql_gb_s01.aws-virginia-1.hq_3306_obs_gb-0] configs updated (org.apache.kafka.connect.runtime.distributed.DistributedHerder:1411)</span><br><span class="line">[2020-11-04 10:29:22,105] INFO [Worker clientId&#x3D;connect-1, groupId&#x3D;realtime-cluster] Handling task config update by restarting tasks [49_gb_soa_prd_mysql_gb_s01.aws-virginia-1.hq_3306_obs_gb-0] (org.apache.kafka.connect.runtime.distributed.DistributedHerder:574)</span><br><span class="line">[2020-11-04 10:29:22,105] INFO Stopping task 49_gb_soa_prd_mysql_gb_s01.aws-virginia-1.hq_3306_obs_gb-0 (org.apache.kafka.connect.runtime.Worker:704)</span><br><span class="line">[2020-11-04 10:29:24,094] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Revoke previously assigned partitions dbhistory_topic-0 (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator:286)</span><br><span class="line">[2020-11-04 10:29:24,094] INFO [Consumer clientId&#x3D;dbhistory, groupId&#x3D;dbhistory] Member dbhistory-b9169794-6a9c-4d16-abb2-70f291ffe28a sending LeaveGroup request to coordinator 172.26.77.29:9092 (id: 2147483646 rack: null) due to the consumer is being closed (org.apache.kafka.clients.consumer.internals.AbstractCoordinator:916)</span><br><span class="line">[2020-11-04 10:29:24,096] INFO Finished database history recovery of 3548 change(s) in 2559 ms (io.debezium.relational.history.DatabaseHistoryMetrics:119)</span><br><span class="line">[2020-11-04 10:29:24,099] INFO Step 0: Get all known binlogs from MySQL (io.debezium.connector.mysql.MySqlConnectorTask:551)</span><br><span class="line">[2020-11-04 10:29:24,100] INFO Connector requires binlog file &#39;binlog.000602&#39;, but MySQL only has binlog.000998, binlog.000999, binlog.001000, binlog.001001, binlog.001002, binlog.001003, binlog.001004, binlog.001005, binlog.001006, binlog.001007, binlog.001008, binlog.001009, binlog.001010, binlog.001011, binlog.001012, binlog.001013, binlog.001014, binlog.001015, binlog.001016 (io.debezium.connector.mysql.MySqlConnectorTask:566)</span><br><span class="line">[2020-11-04 10:29:24,101] INFO Stopping down connector (io.debezium.connector.common.BaseSourceTask:187)</span><br><span class="line">[2020-11-04 10:29:24,101] INFO Stopping MySQL connector task (io.debezium.connector.mysql.MySqlConnectorTask:458)</span><br><span class="line">[2020-11-04 10:29:24,101] INFO WorkerSourceTask&#123;id&#x3D;49_gb_soa_prd_mysql_gb_s01.aws-virginia-1.hq_3306_obs_gb-0&#125; Committing offsets (org.apache.kafka.connect.runtime.WorkerSourceTask:416)</span><br><span class="line">[2020-11-04 10:29:24,101] INFO WorkerSourceTask&#123;id&#x3D;49_gb_soa_prd_mysql_gb_s01.aws-virginia-1.hq_3306_obs_gb-0&#125; flushing 0 outstanding messages for offset commit (org.apache.kafka.connect.runtime.WorkerSourceTask:433)</span><br><span class="line">[2020-11-04 10:29:24,101] ERROR WorkerSourceTask&#123;id&#x3D;49_gb_soa_prd_mysql_gb_s01.aws-virginia-1.hq_3306_obs_gb-0&#125; Task threw an uncaught and unrecoverable exception (org.apache.kafka.connect.runtime.WorkerTask:179)</span><br><span class="line">org.apache.kafka.connect.errors.ConnectException: The connector is trying to read binlog starting at binlog file &#39;binlog.000602&#39;, pos&#x3D;457725550, skipping 0 events plus 0 rows, but this is no longer available on the server. Reconfigure the connector to use a snapshot when needed.</span><br><span class="line">	at io.debezium.connector.mysql.MySqlConnectorTask.start(MySqlConnectorTask.java:133)</span><br><span class="line">	at io.debezium.connector.common.BaseSourceTask.start(BaseSourceTask.java:101)</span><br><span class="line">	at org.apache.kafka.connect.runtime.WorkerSourceTask.execute(WorkerSourceTask.java:208)</span><br><span class="line">	at org.apache.kafka.connect.runtime.WorkerTask.doRun(WorkerTask.java:177)</span><br><span class="line">	at org.apache.kafka.connect.runtime.WorkerTask.run(WorkerTask.java:227)</span><br><span class="line">	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)</span><br><span class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)</span><br><span class="line">	at java.lang.Thread.run(Thread.java:745)</span><br><span class="line">[2020-11-04 10:29:24,102] ERROR WorkerSourceTask&#123;id&#x3D;49_gb_soa_prd_mysql_gb_s01.aws-virginia-1.hq_3306_obs_gb-0&#125; Task is being killed and will not recover until manually restarted (org.apache.kafka.connect.runtime.WorkerTask:180)</span><br></pre></td></tr></table></figure>
<p>从异常信息来看，确实是因为binlog文件被清理导致快照记录的偏移量是丢失了，debezium有关于该问题谈论：</p>
<ol>
<li><a href="https://groups.google.com/g/debezium/c/di3jWxMzq9c">debezium unable to start if the binlog is purged</a></li>
<li><a href="https://gitter.im/debezium/user?at=5d1dde6626206b667c89e0c4">Resume Debezium MySQL connector</a></li>
</ol>
<p>这问题确实比较麻烦，最简单方式是使用一个新的serverName重新建立一个新的connector，但是问题就是topicName是跟serverName生成的，那说明后续处理topic的程序就需要改动。</p>
<p><code>Debezium Mysql</code>定义了几种快照模式：</p>
<table>
<thead>
<tr>
<th align="left">快照模式</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">initial(默认)</td>
<td align="left">仅在没有为serverName记录偏移量时才会生产快照</td>
</tr>
<tr>
<td align="left">when_needed</td>
<td align="left">在必要时运行快照，没有偏移量或者偏移量不可用时</td>
</tr>
<tr>
<td align="left">never</td>
<td align="left">不使用快照，并且首次启动时，从binlog的起始偏移量开始读取</td>
</tr>
<tr>
<td align="left">schema_only</td>
<td align="left">不需要保留数据的一致性快照，只需要保留结构的快照</td>
</tr>
<tr>
<td align="left">schema_only_recovery</td>
<td align="left">当记录现有偏移量的topic不存在时，从当前binlog的起始偏移量开始读取恢复</td>
</tr>
</tbody></table>
<p>如果使用的是<code>schema_only</code>或<code>schema_only_recovery</code>模式，能够使用<code>when_needed</code>进行恢复，但是中间丢失的binlog数据也会丢失，最好是在使用<code>when_needed</code>前先进行全量恢复使其保持数据一致性。<br>如果使用的其他模式，那么只能手动修改记录的偏移量，虽然官网提供了<a href="https://debezium.io/documentation/faq/#how_to_change_the_offsets_of_the_source_database">how_to_change_the_offsets_of_the_source_database</a>的教程，但修改起来还是很麻烦。</p>
<p>手动修改偏移量：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 找到offset.storage的配置(kafka-connector配置文件)</span><br><span class="line">offset.storage.topic&#x3D;realtime-connect-offsets</span><br><span class="line">offset.storage.replication.factor&#x3D;3</span><br><span class="line">offset.storage.partitions&#x3D;2</span><br><span class="line"></span><br><span class="line"># 找到bootstrap.servers</span><br><span class="line">bootstrap.servers&#x3D;localhost:9092,localhost:9093,localhost:9094</span><br><span class="line"></span><br><span class="line"># offset.storage.topic中的消息格式</span><br><span class="line">[&quot;debezium connector name&quot;,&#123;&quot;server&quot;:&quot;database.server.name&quot;&#125;], &#123;&quot;ts_sec&quot;:当前时间戳,&quot;file&quot;:&quot;binlog fileName&quot;,&quot;pos&quot;:偏移量,&quot;row&quot;:1,&quot;server_id&quot;:server id,&quot;event&quot;:2&#125;</span><br><span class="line"></span><br><span class="line"># 向offset.storage.topic中生产一条消息</span><br><span class="line"># 因为消息格式为key:value，运行producer时必须加上parse.key和key.separator属性</span><br><span class="line">kafka-console-producer.sh --broker-list localhost:9092,localhost:9093,localhost:9094 --topic topic-name --property &quot;parse.key&#x3D;true&quot; --property &quot;key.separator&#x3D;:&quot;</span><br><span class="line"># producer启动后生产消息</span><br><span class="line">[\&quot;mysql_test_name\&quot;,&#123;\&quot;server\&quot;:\&quot;mysql_test\&quot;&#125;]:&#123;\&quot;ts_sec\&quot;:1605149663000,\&quot;file\&quot;:\&quot;binlog.000560\&quot;,\&quot;pos\&quot;:232604132,\&quot;row\&quot;:1,\&quot;server_id\&quot;:572,\&quot;event\&quot;:2&#125;</span><br></pre></td></tr></table></figure>
<p>修改完成后，重新启动connector就会从修改的binlog pos开始读取，但是中间的数据依旧会丢失。</p>
<h3 id="Mysql-主库磁盘不足导致binlog不完整"><a href="#Mysql-主库磁盘不足导致binlog不完整" class="headerlink" title="Mysql 主库磁盘不足导致binlog不完整"></a>Mysql 主库磁盘不足导致binlog不完整</h3><p>出现binlog文件被删除的告警错误，发现Connector停止时间才八个小时，而binlog存储的还有24小时，错误信息大致如下，调整了部分信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2020-11-11 15:15:20,692] INFO WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; Committing offsets (org.apache.kafka.connect.runtime.WorkerSourceTask:416)</span><br><span class="line">[2020-11-11 15:15:20,693] INFO WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; flushing 0 outstanding messages for offset commit (org.apache.kafka.connect.runtime.WorkerSourceTask:433)</span><br><span class="line">[2020-11-11 15:15:20,693] WARN Couldn&#39;t commit processed log positions with the source database due to a concurrent connector shutdown or restart (io.debezium.connector.common.BaseSourceTask:238)</span><br><span class="line">[2020-11-11 15:15:20,709] INFO WorkerSourceTask&#123;id&#x3D;mysql_connector_test_2-0&#125; Committing offsets (org.apache.kafka.connect.runtime.WorkerSourceTask:416)</span><br><span class="line">[2020-11-11 15:15:20,709] INFO WorkerSourceTask&#123;id&#x3D;mysql_connector_test_2-0&#125; flushing 0 outstanding messages for offset commit (org.apache.kafka.connect.runtime.WorkerSourceTask:433)</span><br><span class="line">[2020-11-11 15:15:20,709] WARN Couldn&#39;t commit processed log positions with the source database due to a concurrent connector shutdown or restart (io.debezium.connector.common.BaseSourceTask:238)</span><br><span class="line">[2020-11-11 15:15:21,605] INFO [Consumer clientId&#x3D;mysql_connector_test_2-dbhistory, groupId&#x3D;mysql_connector_test_2-dbhistory] Revoke previously assigned partitions ddlhistory.sync_36-0 (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator:286)</span><br><span class="line">[2020-11-11 15:15:21,605] INFO [Consumer clientId&#x3D;mysql_connector_test_2-dbhistory, groupId&#x3D;mysql_connector_test_2-dbhistory] Member mysql_connector_test_2-dbhistory-4acebc73-3006-48f7-99d1-0c80976ba224 sending LeaveGroup request to coordinator 172.26.77.37:9092 (id: 2147483644 rack: null) due to the consumer is being closed (org.apache.kafka.clients.consumer.internals.AbstractCoordinator:916)</span><br><span class="line">[2020-11-11 15:15:21,610] INFO Finished database history recovery of 5009 change(s) in 9828 ms (io.debezium.relational.history.DatabaseHistoryMetrics:119)</span><br><span class="line">[2020-11-11 15:15:21,931] INFO Step 0: Get all known binlogs from MySQL (io.debezium.connector.mysql.MySqlConnectorTask:551)</span><br><span class="line">[2020-11-11 15:15:21,936] INFO MySQL has the binlog file &#39;binlog.000247&#39; required by the connector (io.debezium.connector.mysql.MySqlConnectorTask:570)</span><br><span class="line">[2020-11-11 15:15:21,963] INFO Requested thread factory for connector MySqlConnector, id &#x3D; sync_36 named &#x3D; binlog-client (io.debezium.util.Threads:270)</span><br><span class="line">[2020-11-11 15:15:22,030] INFO Creating thread debezium-mysqlconnector-sync_36-binlog-client (io.debezium.util.Threads:287)</span><br><span class="line">[2020-11-11 15:15:22,034] INFO Creating thread debezium-mysqlconnector-sync_36-binlog-client (io.debezium.util.Threads:287)</span><br><span class="line">[2020-11-11 15:15:22,169] INFO Connected to MySQL binlog at mysql:3306, starting at binlog file &#39;binlog.000247&#39;, pos&#x3D;218926431, skipping 3 events plus 1 rows (io.debezium.connector.mysql.BinlogReader:1111)</span><br><span class="line">[2020-11-11 15:15:22,170] INFO Creating thread debezium-mysqlconnector-sync_36-binlog-client (io.debezium.util.Threads:287)</span><br><span class="line">[2020-11-11 15:15:22,171] INFO Waiting for keepalive thread to start (io.debezium.connector.mysql.BinlogReader:412)</span><br><span class="line">[2020-11-11 15:15:22,172] INFO Keepalive thread is running (io.debezium.connector.mysql.BinlogReader:419)</span><br><span class="line">[2020-11-11 15:15:22,273] INFO WorkerSourceTask&#123;id&#x3D;mysql_connector_test_2-0&#125; Source task finished initialization and start (org.apache.kafka.connect.runtime.WorkerSourceTask:209)</span><br><span class="line">[2020-11-11 15:15:24,994] INFO [Consumer clientId&#x3D;mysql_connector_test_1-dbhistory, groupId&#x3D;mysql_connector_test_1-dbhistory] Revoke previously assigned partitions ddlhistory.sync_39-0 (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator:286)</span><br><span class="line">[2020-11-11 15:15:24,994] INFO [Consumer clientId&#x3D;mysql_connector_test_1-dbhistory, groupId&#x3D;mysql_connector_test_1-dbhistory] Member mysql_connector_test_1-dbhistory-3f3de8fa-2a48-473f-9484-b7d323b55972 sending LeaveGroup request to coordinator 172.26.77.110:9092 (id: 2147483645 rack: null) due to the consumer is being closed (org.apache.kafka.clients.consumer.internals.AbstractCoordinator:916)</span><br><span class="line">[2020-11-11 15:15:24,998] INFO Finished database history recovery of 8384 change(s) in 13322 ms (io.debezium.relational.history.DatabaseHistoryMetrics:119)</span><br><span class="line">[2020-11-11 15:15:25,102] INFO Step 0: Get all known binlogs from MySQL (io.debezium.connector.mysql.MySqlConnectorTask:551)</span><br><span class="line">[2020-11-11 15:15:25,107] INFO Connector requires binlog file &#39;binlog.000559&#39;, but MySQL only has binlog.000384, binlog.000385, binlog.000386, binlog.000387, binlog.000388, binlog.000389, binlog.000390, binlog.000391, binlog.000392, binlog.000393, binlog.000394, binlog.000395, binlog.000396, binlog.000397, binlog.000398, binlog.000399, binlog.000400, binlog.000401, binlog.000402, binlog.000403, binlog.000404, binlog.000405, binlog.000406, binlog.000407, binlog.000408, binlog.000409, binlog.000410, binlog.000411, binlog.000412, binlog.000413, binlog.000414, binlog.000415, binlog.000416, binlog.000417, binlog.000418, binlog.000419, binlog.000420, binlog.000421, binlog.000422, binlog.000423, binlog.000424, binlog.000425, binlog.000426, binlog.000427, binlog.000428, binlog.000429, binlog.000430, binlog.000431, binlog.000432, binlog.000433, binlog.000434, binlog.000435, binlog.000436, binlog.000437, binlog.000438, binlog.000439, binlog.000440, binlog.000441, binlog.000442, binlog.000443, binlog.000444, binlog.000445, binlog.000446, binlog.000447, binlog.000448, binlog.000449, binlog.000450, binlog.000451, binlog.000452, binlog.000453, binlog.000454, binlog.000455, binlog.000456, binlog.000457, binlog.000458, binlog.000459, binlog.000460, binlog.000461, binlog.000462, binlog.000463, binlog.000464, binlog.000465, binlog.000466, binlog.000467, binlog.000468, binlog.000469, binlog.000470, binlog.000471, binlog.000472, binlog.000473, binlog.000474, binlog.000475, binlog.000476, binlog.000477, binlog.000478, binlog.000479, binlog.000480, binlog.000481, binlog.000482, binlog.000483, binlog.000484, binlog.000485, binlog.000486, binlog.000487, binlog.000488, binlog.000489, binlog.000490, binlog.000491, binlog.000492, binlog.000493, binlog.000494, binlog.000495, binlog.000496, binlog.000497, binlog.000498, binlog.000499, binlog.000500, binlog.000501, binlog.000502, binlog.000503, binlog.000504, binlog.000505, binlog.000506, binlog.000507, binlog.000508, binlog.000509, binlog.000510, binlog.000511, binlog.000512, binlog.000513, binlog.000514, binlog.000515, binlog.000516, binlog.000517, binlog.000518, binlog.000519, binlog.000520, binlog.000521, binlog.000522, binlog.000523, binlog.000524, binlog.000525, binlog.000526, binlog.000527, binlog.000528, binlog.000529, binlog.000530, binlog.000531, binlog.000532, binlog.000533, binlog.000534, binlog.000535, binlog.000536, binlog.000537, binlog.000538, binlog.000539, binlog.000540, binlog.000541, binlog.000542, binlog.000543, binlog.000544, binlog.000545, binlog.000546, binlog.000547, binlog.000548, binlog.000549, binlog.000550, binlog.000551, binlog.000552, binlog.000553, binlog.000554, binlog.000555, binlog.000556, binlog.000557, binlog.000558 (io.debezium.connector.mysql.MySqlConnectorTask:566)</span><br><span class="line">[2020-11-11 15:15:25,108] INFO Stopping down connector (io.debezium.connector.common.BaseSourceTask:187)</span><br><span class="line">[2020-11-11 15:15:25,108] INFO Stopping MySQL connector task (io.debezium.connector.mysql.MySqlConnectorTask:458)</span><br><span class="line">[2020-11-11 15:15:25,108] INFO WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; Committing offsets (org.apache.kafka.connect.runtime.WorkerSourceTask:416)</span><br><span class="line">[2020-11-11 15:15:25,108] INFO WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; flushing 0 outstanding messages for offset commit (org.apache.kafka.connect.runtime.WorkerSourceTask:433)</span><br><span class="line">[2020-11-11 15:15:25,109] ERROR WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; Task threw an uncaught and unrecoverable exception (org.apache.kafka.connect.runtime.WorkerTask:179)</span><br><span class="line">org.apache.kafka.connect.errors.ConnectException: The connector is trying to read binlog starting at binlog file &#39;binlog.000559&#39;, pos&#x3D;271193190, skipping 3 events plus 1 rows, but this is no longer available on the server. Reconfigure the connector to use a snapshot when needed.</span><br><span class="line">	at io.debezium.connector.mysql.MySqlConnectorTask.start(MySqlConnectorTask.java:133)</span><br><span class="line">	at io.debezium.connector.common.BaseSourceTask.start(BaseSourceTask.java:101)</span><br><span class="line">	at org.apache.kafka.connect.runtime.WorkerSourceTask.execute(WorkerSourceTask.java:208)</span><br><span class="line">	at org.apache.kafka.connect.runtime.WorkerTask.doRun(WorkerTask.java:177)</span><br><span class="line">	at org.apache.kafka.connect.runtime.WorkerTask.run(WorkerTask.java:227)</span><br><span class="line">	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)</span><br><span class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)</span><br><span class="line">	at java.lang.Thread.run(Thread.java:745)</span><br><span class="line">[2020-11-11 15:15:25,110] ERROR WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; Task is being killed and will not recover until manually restarted (org.apache.kafka.connect.runtime.WorkerTask:180)</span><br><span class="line">[2020-11-11 15:15:25,110] INFO Connector has already been stopped (io.debezium.connector.common.BaseSourceTask:179)</span><br><span class="line">[2020-11-11 15:15:25,110] INFO [Producer clientId&#x3D;connector-producer-mysql_connector_test_1-0] Closing the Kafka producer with timeoutMillis &#x3D; 30000 ms. (org.apache.kafka.clients.producer.KafkaProducer:1183)[2020-11-11 15:15:30,697] INFO WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; Committing offsets (org.apache.kafka.connect.runtime.WorkerSourceTask:416)</span><br></pre></td></tr></table></figure>
<p>有个关键的信息是，Debezium保存的是binlog.000559，而主库却只有385-558的binlog，猜测可能跟binlog清理设置有关系。<br>将快照模式依次调整为<code>schema_only_recovery</code>和<code>when_needed</code>都报出了相同的错误：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2020-11-12 01:51:06,372] ERROR WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; Task threw an uncaught and unrecoverable exception (org.apache.kafka.connect.runtime.WorkerTask:179)</span><br><span class="line">org.apache.kafka.connect.errors.ConnectException: binlog truncated in the middle of event; consider out of disk space on master; the first event &#39;binlog.000559&#39; at 271193190, the last event read from &#39;&#x2F;data&#x2F;dbdata&#x2F;mysqllog&#x2F;binlog&#x2F;binlog.000559&#39; at 271193190, the last</span><br><span class="line"> byte read from &#39;&#x2F;data&#x2F;dbdata&#x2F;mysqllog&#x2F;binlog&#x2F;binlog.000559&#39; at 271193209. Error code: 1236; SQLSTATE: HY000.</span><br><span class="line">        at io.debezium.connector.mysql.AbstractReader.wrap(AbstractReader.java:230)</span><br><span class="line">        at io.debezium.connector.mysql.AbstractReader.failed(AbstractReader.java:196)</span><br><span class="line">        at io.debezium.connector.mysql.BinlogReader$ReaderThreadLifecycleListener.onCommunicationFailure(BinlogReader.java:1125)</span><br><span class="line">        at com.github.shyiko.mysql.binlog.BinaryLogClient.listenForEventPackets(BinaryLogClient.java:985)</span><br><span class="line">        at com.github.shyiko.mysql.binlog.BinaryLogClient.connect(BinaryLogClient.java:581)</span><br><span class="line">        at com.github.shyiko.mysql.binlog.BinaryLogClient$7.run(BinaryLogClient.java:860)</span><br><span class="line">        at java.lang.Thread.run(Thread.java:745)</span><br><span class="line">Caused by: com.github.shyiko.mysql.binlog.network.ServerException: binlog truncated in the middle of event; consider out of disk space on master; the first event &#39;binlog.000559&#39; at 271193190, the last event read from &#39;&#x2F;data&#x2F;dbdata&#x2F;mysqllog&#x2F;binlog&#x2F;binlog.000559&#39; at 27</span><br><span class="line">1193190, the last byte read from &#39;&#x2F;data&#x2F;dbdata&#x2F;mysqllog&#x2F;binlog&#x2F;binlog.000559&#39; at 271193209.</span><br><span class="line">        at com.github.shyiko.mysql.binlog.BinaryLogClient.listenForEventPackets(BinaryLogClient.java:949)</span><br><span class="line">        ... 3 more</span><br><span class="line">[2020-11-12 01:51:06,372] ERROR WorkerSourceTask&#123;id&#x3D;mysql_connector_test_1-0&#125; Task is being killed and will not recover until manually restarted (org.apache.kafka.connect.runtime.WorkerTask:180)</span><br><span class="line">[2020-11-12 01:51:06,372] INFO Stopping down connector (io.debezium.connector.common.BaseSourceTask:187)</span><br><span class="line">[2020-11-12 01:51:06,372] INFO Stopping MySQL connector task (io.debezium.connector.mysql.MySqlConnectorTask:458)</span><br></pre></td></tr></table></figure>
<p>主库是存在binlog.000559这个文件的，但是可能由于主库磁盘存储不足导致日志记录不完整，被截断了。<br>通过<a href="https://www.percona.com/blog/2014/10/08/mysql-replication-got-fatal-error-1236-causes-and-cures/">MySQL Replication: ‘Got fatal error 1236’ causes and cures</a><br>和<a href="http://blog.itpub.net/22664653/viewspace-1714269/">Got fatal error 1236原因</a>了解到，只能将binlog指向下一个可用的binlog file，所以只能通过<code>手动修改偏移量</code>的方式解决。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://debezium.io/documentation/reference/1.3/connectors/mysql.html"><i class="fas fa-paperclip"></i> debezium documentation</a><br><a href="https://groups.google.com/g/debezium/c/di3jWxMzq9c"><i class="fas fa-paperclip"></i> debezium unable to start if the binlog is purged</a><br><a href="https://gitter.im/debezium/user?at=5d1dde6626206b667c89e0c4"><i class="fas fa-paperclip"></i> Resume Debezium MySQL connector</a><br><a href="https://debezium.io/documentation/faq/#how_to_change_the_offsets_of_the_source_database"><i class="fas fa-paperclip"></i> how_to_change_the_offsets_of_the_source_database</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Debezium</tag>
        <tag>Mysql</tag>
        <tag>binlog</tag>
        <tag>实时同步</tag>
      </tags>
  </entry>
</search>
